
var opl = (() => {
  var _scriptName = import.meta.url;
  
  return (
async function(moduleArg = {}) {
  var moduleRtn;

var Module=moduleArg;var readyPromiseResolve,readyPromiseReject;var readyPromise=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var ENVIRONMENT_IS_WEB=typeof window=="object";var ENVIRONMENT_IS_WORKER=typeof importScripts=="function";var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string"&&process.type!="renderer";if(ENVIRONMENT_IS_NODE){const{createRequire}=await import("module");let dirname=import.meta.url;if(dirname.startsWith("data:")){dirname="/"}var require=createRequire(dirname)}var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram="./this.program";var quit_=(status,toThrow)=>{throw toThrow};var scriptDirectory="";var readAsync,readBinary;if(ENVIRONMENT_IS_NODE){var fs=require("fs");var nodePath=require("path");if(!import.meta.url.startsWith("data:")){scriptDirectory=nodePath.dirname(require("url").fileURLToPath(import.meta.url))+"/"}readBinary=filename=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);var ret=fs.readFileSync(filename);return ret};readAsync=(filename,binary=true)=>{filename=isFileURI(filename)?new URL(filename):nodePath.normalize(filename);return new Promise((resolve,reject)=>{fs.readFile(filename,binary?undefined:"utf8",(err,data)=>{if(err)reject(err);else resolve(binary?data.buffer:data)})})};if(!Module["thisProgram"]&&process.argv.length>1){thisProgram=process.argv[1].replace(/\\/g,"/")}arguments_=process.argv.slice(2);quit_=(status,toThrow)=>{process.exitCode=status;throw toThrow}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!="undefined"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptName){scriptDirectory=_scriptName}if(scriptDirectory.startsWith("blob:")){scriptDirectory=""}else{scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf("/")+1)}{if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=url=>{if(isFileURI(url)){return new Promise((resolve,reject)=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){resolve(xhr.response);return}reject(xhr.status)};xhr.onerror=reject;xhr.send(null)})}return fetch(url,{credentials:"same-origin"}).then(response=>{if(response.ok){return response.arrayBuffer()}return Promise.reject(new Error(response.status+" : "+response.url))})}}}else{}var out=Module["print"]||console.log.bind(console);var err=Module["printErr"]||console.error.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module["arguments"])arguments_=Module["arguments"];if(Module["thisProgram"])thisProgram=Module["thisProgram"];var wasmBinary=Module["wasmBinary"];function intArrayFromBase64(s){if(typeof ENVIRONMENT_IS_NODE!="undefined"&&ENVIRONMENT_IS_NODE){var buf=Buffer.from(s,"base64");return new Uint8Array(buf.buffer,buf.byteOffset,buf.length)}var decoded=atob(s);var bytes=new Uint8Array(decoded.length);for(var i=0;i<decoded.length;++i){bytes[i]=decoded.charCodeAt(i)}return bytes}function tryParseAsDataURI(filename){if(!isDataURI(filename)){return}return intArrayFromBase64(filename.slice(dataURIPrefix.length))}var wasmMemory;var ABORT=false;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module["HEAP8"]=HEAP8=new Int8Array(b);Module["HEAP16"]=HEAP16=new Int16Array(b);Module["HEAPU8"]=HEAPU8=new Uint8Array(b);Module["HEAPU16"]=HEAPU16=new Uint16Array(b);Module["HEAP32"]=HEAP32=new Int32Array(b);Module["HEAPU32"]=HEAPU32=new Uint32Array(b);Module["HEAPF32"]=HEAPF32=new Float32Array(b);Module["HEAPF64"]=HEAPF64=new Float64Array(b)}var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){var preRuns=Module["preRun"];if(preRuns){if(typeof preRuns=="function")preRuns=[preRuns];preRuns.forEach(addOnPreRun)}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){var postRuns=Module["postRun"];if(postRuns){if(typeof postRuns=="function")postRuns=[postRuns];postRuns.forEach(addOnPostRun)}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;Module["monitorRunDependencies"]?.(runDependencies)}function removeRunDependency(id){runDependencies--;Module["monitorRunDependencies"]?.(runDependencies);if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){Module["onAbort"]?.(what);what="Aborted("+what+")";err(what);ABORT=true;what+=". Build with -sASSERTIONS for more info.";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix="data:application/octet-stream;base64,";var isDataURI=filename=>filename.startsWith(dataURIPrefix);var isFileURI=filename=>filename.startsWith("file://");function findWasmBinary(){var f="data:application/octet-stream;base64,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//8BThsiBDsBBiADIAQ7AQQgAEECaiEAIANBCGohAyABQQJqIgEgB0cNAAsLRQ0AIANB//8BQYCAfiACIABBAnRqKAIAQQF0IgAgAEGAgH5MGyIAIABB//8BThsiADsBAiADIAA7AQALC08BAn8jAEEQayICJAAgASAAKAIEIgNBAXVqIQEgACgCACEAIAJBCGogASADQQFxBH8gASgCACAAaigCAAUgAAsRAwAgAigCDCACQRBqJAALUQEDfyMAQRBrIgIkACABKAK0IiEDIAEoAqQiIQQgAiABKAKgIjYCDCACIAMgBGw2AgggAEHkGCACQQhqEAk2AgQgAEGgkQE2AgAgAkEQaiQACzcBAX8gASAAKAIEIgNBAXVqIQEgACgCACEAIAEgAiADQQFxBH8gASgCACAAaigCAAUgAAsRAwALOQAgAUGBBE4EQEGcxgBBuRhBABAGGg8LIAFBAUwEQEHyxgBBuRhBABAGGg8LIAAgAEGoImogARAsCzkBAX8gASAAKAIEIgRBAXVqIQEgACgCACEAIAEgAiADIARBAXEEfyABKAIAIABqKAIABSAACxEBAAsOACAAIAEgAkH/AXEQLQubAwEDf0G4IhAXIQIgACgCACEFIAEoAgAhASACQdQINgIAIAJBBGohA0G0BSEEA0AgAyAEaiIAQgA3AhQgAEEAOgBWIABBADYATSAAQQE6AEwgAEEANgIEIABBAjYCACAAQQA6AK4BIABBADYCRCAAQv+DgIDwPzcCNCAAQv+DgIDwPzcCLCAAQgA3AmwgAEEANgClASAAQgA3AhwgAEEANgIkIABBADYAUCAAQgA3AnQgAEEANgJ8IABBADYAqAEgAEEBOgCkASAAQQA2AlwgAEECNgJYIABC/4OAgPA/NwKMASAAQv+DgIDwPzcChAEgAEEANgKcASAAQgA3ArwBIABBADsAxQEgAEH//wM7AcgBIABBADoAxwEgAEEfOgDEASAAQQw2ArABIABCADcCtAEgBEHMAWoiBEGMIkcNAAsgA0EANgKMIiADQQA6AJgiQX8gAUELdCABQQBIGxAXIQAgAiABNgK0IiACIAE6ALAiIAIgADYCrCIgAkHAFzYCqCIgAkGACDYCpCIgAiAANgKgIiACIAUQKyACCz0BAX8jAEEQayIEJAAgBCABNgIMIAQgAjYCCCAEIAM2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FQAAAJAiAAB4BAAAjAQAAE41REJPUEw3SGFuZGxlckUAAAAAaCIAAJQEAABONUFkbGliN0hhbmRsZXJFAHVuc2lnbmVkIHNob3J0AHVuc2lnbmVkIGludABmbG9hdAB1aW50NjRfdABnZXRCdWZmZXIAdW5zaWduZWQgY2hhcgBib29sAHVuc2lnbmVkIGxvbmcAc3RkOjp3c3RyaW5nAHN0ZDo6c3RyaW5nAHN0ZDo6dTE2c3RyaW5nAHN0ZDo6dTMyc3RyaW5nAHdyaXRlAGdlbmVyYXRlAGRvdWJsZQB2b2lkAE9QTABlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxzaG9ydD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgc2hvcnQ+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgaW50PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxmbG9hdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dWludDhfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50OF90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1aW50MTZfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8aW50MTZfdD4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dWludDY0X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PGludDY0X3Q+AGVtc2NyaXB0ZW46Om1lbW9yeV92aWV3PHVpbnQzMl90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxpbnQzMl90PgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxjaGFyPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzx1bnNpZ25lZCBjaGFyPgBzdGQ6OmJhc2ljX3N0cmluZzx1bnNpZ25lZCBjaGFyPgBlbXNjcmlwdGVuOjptZW1vcnlfdmlldzxzaWduZWQgY2hhcj4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8bG9uZz4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8dW5zaWduZWQgbG9uZz4AZW1zY3JpcHRlbjo6bWVtb3J5X3ZpZXc8ZG91YmxlPgAfAQIAAQABHoGAgZ5oIgAACAgAAE5TdDNfXzIxMmJhc2ljX3N0cmluZ0ljTlNfMTFjaGFyX3RyYWl0c0ljRUVOU185YWxsb2NhdG9ySWNFRUVFAABoIgAAUAgAAE5TdDNfXzIxMmJhc2ljX3N0cmluZ0loTlNfMTFjaGFyX3RyYWl0c0loRUVOU185YWxsb2NhdG9ySWhFRUVFAABoIgAAmAgAAE5TdDNfXzIxMmJhc2ljX3N0cmluZ0l3TlNfMTFjaGFyX3RyYWl0c0l3RUVOU185YWxsb2NhdG9ySXdFRUVFAABoIgAA4AgAAE5TdDNfXzIxMmJhc2ljX3N0cmluZ0lEc05TXzExY2hhcl90cmFpdHNJRHNFRU5TXzlhbGxvY2F0b3JJRHNFRUVFAAAAaCIAACwJAABOU3QzX18yMTJiYXNpY19zdHJpbmdJRGlOU18xMWNoYXJfdHJhaXRzSURpRUVOU185YWxsb2NhdG9ySURpRUVFRQAAAGgiAAB4CQAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJY0VFAABoIgAAoAkAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWFFRQAAaCIAAMgJAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0loRUUAAGgiAADwCQAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJdEVFAABoIgAAGAoAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWlFRQAAaCIAAEAKAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lqRUUAAGgiAABoCgAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJbEVFAABoIgAAkAoAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SW1FRQAAaCIAALgKAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0l4RUUAAGgiAADgCgAATjEwZW1zY3JpcHRlbjExbWVtb3J5X3ZpZXdJeUVFAABoIgAACAsAAE4xMGVtc2NyaXB0ZW4xMW1lbW9yeV92aWV3SWZFRQAAaCIAADALAABOMTBlbXNjcmlwdGVuMTFtZW1vcnlfdmlld0lkRUUAAGgiAABYCwAAM09QTAAAAADsIgAAcAsAAAAAAABQCwAA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";return f}var wasmBinaryFile;function getBinarySync(file){if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}var binary=tryParseAsDataURI(file);if(binary){return binary}if(readBinary){return readBinary(file)}throw"both async and sync fetching of the wasm failed"}function getBinaryPromise(binaryFile){return Promise.resolve().then(()=>getBinarySync(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>WebAssembly.instantiate(binary,imports)).then(receiver,reason=>{err(`failed to asynchronously prepare wasm: ${reason}`);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){return instantiateArrayBuffer(binaryFile,imports,callback)}function getWasmImports(){return{a:wasmImports}}function createWasm(){var info=getWasmImports();function receiveInstance(instance,module){wasmExports=instance.exports;wasmMemory=wasmExports["r"];updateMemoryViews();wasmTable=wasmExports["u"];addOnInit(wasmExports["s"]);removeRunDependency("wasm-instantiate");return wasmExports}addRunDependency("wasm-instantiate");function receiveInstantiationResult(result){receiveInstance(result["instance"])}if(Module["instantiateWasm"]){try{return Module["instantiateWasm"](info,receiveInstance)}catch(e){err(`Module.instantiateWasm callback failed with error: ${e}`);readyPromiseReject(e)}}wasmBinaryFile??=findWasmBinary();instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var ASM_CONSTS={8988:()=>{throw new Error("OPL.generate() cannot generate more than 512 samples per call")},9074:()=>{throw new Error("OPL.generate() cannot generate fewer than 2 samples per call")}};var callRuntimeCallbacks=callbacks=>{callbacks.forEach(f=>f(Module))};var noExitRuntime=Module["noExitRuntime"]||true;var __abort_js=()=>{abort("")};var __embind_register_bigint=(primitiveType,name,size,minRange,maxRange)=>{};var embind_init_charCodes=()=>{var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes};var embind_charCodes;var readLatin1String=ptr=>{var ret="";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret};var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var BindingError;var throwBindingError=message=>{throw new BindingError(message)};var InternalError;var throwInternalError=message=>{throw new InternalError(message)};var whenDependentTypesAreResolved=(myTypes,dependentTypes,getTypeConverters)=>{myTypes.forEach(type=>typeDependencies[type]=dependentTypes);function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError("Mismatched type converter count")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach((dt,i)=>{if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(()=>{typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}};function sharedRegisterType(rawType,registeredInstance,options={}){var name=registeredInstance.name;if(!rawType){throwBindingError(`type "${name}" must have a positive integer typeid pointer`)}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(`Cannot register type '${name}' twice`)}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(cb=>cb())}}function registerType(rawType,registeredInstance,options={}){return sharedRegisterType(rawType,registeredInstance,options)}var GenericWireTypeSize=8;var __embind_register_bool=(rawType,name,trueValue,falseValue)=>{name=readLatin1String(name);registerType(rawType,{name,fromWireType:function(wt){return!!wt},toWireType:function(destructors,o){return o?trueValue:falseValue},argPackAdvance:GenericWireTypeSize,readValueFromPointer:function(pointer){return this["fromWireType"](HEAPU8[pointer])},destructorFunction:null})};var shallowCopyInternalPointer=o=>({count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType});var throwInstanceAlreadyDeleted=obj=>{function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+" instance already deleted")};var finalizationRegistry=false;var detachFinalizer=handle=>{};var runDestructor=$$=>{if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}};var releaseClassHandle=$$=>{$$.count.value-=1;var toDelete=0===$$.count.value;if(toDelete){runDestructor($$)}};var downcastPointer=(ptr,ptrClass,desiredClass)=>{if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)};var registeredPointers={};var registeredInstances={};var getBasestPointer=(class_,ptr)=>{if(ptr===undefined){throwBindingError("ptr should not be undefined")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr};var getInheritedInstance=(class_,ptr)=>{ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]};var makeClassHandle=(prototype,record)=>{if(!record.ptrType||!record.ptr){throwInternalError("makeClassHandle requires ptr and ptrType")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError("Both smartPtrType and smartPtr must be specified")}record.count={value:1};return attachFinalizer(Object.create(prototype,{$$:{value:record,writable:true}}))};function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance["clone"]()}else{var rv=registeredInstance["clone"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}var attachFinalizer=handle=>{if("undefined"===typeof FinalizationRegistry){attachFinalizer=handle=>handle;return handle}finalizationRegistry=new FinalizationRegistry(info=>{releaseClassHandle(info.$$)});attachFinalizer=handle=>{var $$=handle.$$;var hasSmartPtr=!!$$.smartPtr;if(hasSmartPtr){var info={$$};finalizationRegistry.register(handle,info,handle)}return handle};detachFinalizer=handle=>finalizationRegistry.unregister(handle);return attachFinalizer(handle)};var deletionQueue=[];var flushPendingDeletes=()=>{while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj["delete"]()}};var delayFunction;var init_ClassHandle=()=>{Object.assign(ClassHandle.prototype,{isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;other.$$=other.$$;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right},clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=attachFinalizer(Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}}));clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}},delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError("Object already scheduled for deletion")}detachFinalizer(this);releaseClassHandle(this.$$);if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}},isDeleted(){return!this.$$.ptr},deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError("Object already scheduled for deletion")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}})};function ClassHandle(){}var createNamedFunction=(name,body)=>Object.defineProperty(body,"name",{value:name});var ensureOverloadTable=(proto,methodName,humanName)=>{if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(...args){if(!proto[methodName].overloadTable.hasOwnProperty(args.length)){throwBindingError(`Function '${humanName}' called with an invalid number of arguments (${args.length}) - expects one of (${proto[methodName].overloadTable})!`)}return proto[methodName].overloadTable[args.length].apply(this,args)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}};var exposePublicSymbol=(name,value,numArguments)=>{if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(`Cannot register public name '${name}' twice`)}ensureOverloadTable(Module,name,name);if(Module[name].overloadTable.hasOwnProperty(numArguments)){throwBindingError(`Cannot register multiple overloads of a function with the same number of arguments (${numArguments})!`)}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}};var char_0=48;var char_9=57;var makeLegalFunctionName=name=>{name=name.replace(/[^a-zA-Z0-9_]/g,"$");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return`_${name}`}return name};function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}var upcastPointer=(ptr,ptrClass,desiredClass)=>{while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(`Expected null or instance of ${desiredClass.name}, got an instance of ${ptrClass.name}`)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr};function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}return 0}if(!handle.$$){throwBindingError(`Cannot pass "${embindRepr(handle)}" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle||!handle.$$){throwBindingError(`Cannot pass "${embindRepr(handle)}" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(`Cannot convert argument of type ${handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name} to parameter type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError("Passing raw pointer to smart pointer is illegal")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(`Cannot convert argument of type ${handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name} to parameter type ${this.name}`)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle["clone"]();ptr=this.rawShare(ptr,Emval.toHandle(()=>clonedHandle["delete"]()));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError("Unsupporting sharing policy")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(`null is not a valid ${this.name}`)}return 0}if(!handle.$$){throwBindingError(`Cannot pass "${embindRepr(handle)}" as a ${this.name}`)}if(!handle.$$.ptr){throwBindingError(`Cannot pass deleted object as a pointer of type ${this.name}`)}if(handle.$$.ptrType.isConst){throwBindingError(`Cannot convert argument of type ${handle.$$.ptrType.name} to parameter type ${this.name}`)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function readPointer(pointer){return this["fromWireType"](HEAPU32[pointer>>2])}var init_RegisteredPointer=()=>{Object.assign(RegisteredPointer.prototype,{getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr},destructor(ptr){this.rawDestructor?.(ptr)},argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,fromWireType:RegisteredPointer_fromWireType})};function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this["toWireType"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this["toWireType"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this["toWireType"]=genericPointerToWireType}}var replacePublicSymbol=(name,value,numArguments)=>{if(!Module.hasOwnProperty(name)){throwInternalError("Replacing nonexistent public symbol")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}};var dynCallLegacy=(sig,ptr,args)=>{sig=sig.replace(/p/g,"i");var f=Module["dynCall_"+sig];return f(ptr,...args)};var wasmTableMirror=[];var wasmTable;var getWasmTableEntry=funcPtr=>{var func=wasmTableMirror[funcPtr];if(!func){if(funcPtr>=wasmTableMirror.length)wasmTableMirror.length=funcPtr+1;wasmTableMirror[funcPtr]=func=wasmTable.get(funcPtr)}return func};var dynCall=(sig,ptr,args=[])=>{if(sig.includes("j")){return dynCallLegacy(sig,ptr,args)}var rtn=getWasmTableEntry(ptr)(...args);return rtn};var getDynCaller=(sig,ptr)=>(...args)=>dynCall(sig,ptr,args);var embind__requireFunction=(signature,rawFunction)=>{signature=readLatin1String(signature);function makeDynCaller(){if(signature.includes("j")){return getDynCaller(signature,rawFunction)}return getWasmTableEntry(rawFunction)}var fp=makeDynCaller();if(typeof fp!="function"){throwBindingError(`unknown function pointer with signature ${signature}: ${rawFunction}`)}return fp};var extendError=(baseErrorType,errorName)=>{var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+"\n"+stack.replace(/^Error(:[^\n]*)?\n/,"")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return`${this.name}: ${this.message}`}};return errorClass};var UnboundTypeError;var getTypeName=type=>{var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv};var throwUnboundTypeError=(message,types)=>{var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(`${message}: `+unboundTypes.map(getTypeName).join([", "]))};var __embind_register_class=(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor)=>{name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);upcast&&=embind__requireFunction(upcastSignature,upcast);downcast&&=embind__requireFunction(downcastSignature,downcast);rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(`Cannot construct ${name} due to unbound types`,[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],base=>{base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(name,function(...args){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError("Use 'new' to construct "+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+" has no accessible constructor")}var body=registeredClass.constructor_body[args.length];if(undefined===body){throw new BindingError(`Tried to invoke ctor of ${name} with invalid number of parameters (${args.length}) - expected (${Object.keys(registeredClass.constructor_body).toString()}) parameters instead!`)}return body.apply(this,args)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);if(registeredClass.baseClass){registeredClass.baseClass.__derivedClasses??=[];registeredClass.baseClass.__derivedClasses.push(registeredClass)}var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+"*",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+" const*",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})};var heap32VectorToArray=(count,firstElement)=>{var array=[];for(var i=0;i<count;i++){array.push(HEAPU32[firstElement+i*4>>2])}return array};var runDestructors=destructors=>{while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}};function usesDestructorStack(argTypes){for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){return true}}return false}function newFunc(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(`new_ called with constructor type ${typeof constructor} which is not a function`)}var dummy=createNamedFunction(constructor.name||"unknownFunctionName",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function createJsInvoker(argTypes,isClassMethodFunc,returns,isAsync){var needsDestructorStack=usesDestructorStack(argTypes);var argCount=argTypes.length-2;var argsList=[];var argsListWired=["fn"];if(isClassMethodFunc){argsListWired.push("thisWired")}for(var i=0;i<argCount;++i){argsList.push(`arg${i}`);argsListWired.push(`arg${i}Wired`)}argsList=argsList.join(",");argsListWired=argsListWired.join(",");var invokerFnBody=`return function (${argsList}) {\n`;if(needsDestructorStack){invokerFnBody+="var destructors = [];\n"}var dtorStack=needsDestructorStack?"destructors":"null";var args1=["humanName","throwBindingError","invoker","fn","runDestructors","retType","classParam"];if(isClassMethodFunc){invokerFnBody+=`var thisWired = classParam['toWireType'](${dtorStack}, this);\n`}for(var i=0;i<argCount;++i){invokerFnBody+=`var arg${i}Wired = argType${i}['toWireType'](${dtorStack}, arg${i});\n`;args1.push(`argType${i}`)}invokerFnBody+=(returns||isAsync?"var rv = ":"")+`invoker(${argsListWired});\n`;if(needsDestructorStack){invokerFnBody+="runDestructors(destructors);\n"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?"thisWired":"arg"+(i-2)+"Wired";if(argTypes[i].destructorFunction!==null){invokerFnBody+=`${paramName}_dtor(${paramName});\n`;args1.push(`${paramName}_dtor`)}}}if(returns){invokerFnBody+="var ret = retType['fromWireType'](rv);\n"+"return ret;\n"}else{}invokerFnBody+="}\n";return[args1,invokerFnBody]}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc,isAsync){var argCount=argTypes.length;if(argCount<2){throwBindingError("argTypes array size mismatch! Must at least get return value and 'this' types!")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=usesDestructorStack(argTypes);var returns=argTypes[0].name!=="void";var closureArgs=[humanName,throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];for(var i=0;i<argCount-2;++i){closureArgs.push(argTypes[i+2])}if(!needsDestructorStack){for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){if(argTypes[i].destructorFunction!==null){closureArgs.push(argTypes[i].destructorFunction)}}}let[args,invokerFnBody]=createJsInvoker(argTypes,isClassMethodFunc,returns,isAsync);args.push(invokerFnBody);var invokerFn=newFunc(Function,args)(...closureArgs);return createNamedFunction(humanName,invokerFn)}var __embind_register_class_constructor=(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor)=>{var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],classType=>{classType=classType[0];var humanName=`constructor ${classType.name}`;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(`Cannot register multiple constructors with identical number of parameters (${argCount-1}) for class '${classType.name}'! Overload resolution is currently only performed using the parameter count, not actual type info!`)}classType.registeredClass.constructor_body[argCount-1]=()=>{throwUnboundTypeError(`Cannot construct ${classType.name} due to unbound types`,rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,argTypes=>{argTypes.splice(1,0,null);classType.registeredClass.constructor_body[argCount-1]=craftInvokerFunction(humanName,argTypes,null,invoker,rawConstructor);return[]});return[]})};var getFunctionName=signature=>{signature=signature.trim();const argsIndex=signature.indexOf("(");if(argsIndex!==-1){return signature.substr(0,argsIndex)}else{return signature}};var __embind_register_class_function=(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual,isAsync,isNonnullReturn)=>{var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);methodName=getFunctionName(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],classType=>{classType=classType[0];var humanName=`${classType.name}.${methodName}`;if(methodName.startsWith("@@")){methodName=Symbol[methodName.substring(2)]}if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(`Cannot call ${humanName} due to unbound types`,rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,argTypes=>{var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context,isAsync);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})};var emval_freelist=[];var emval_handles=[];var __emval_decref=handle=>{if(handle>9&&0===--emval_handles[handle+1]){emval_handles[handle]=undefined;emval_freelist.push(handle)}};var count_emval_handles=()=>emval_handles.length/2-5-emval_freelist.length;var init_emval=()=>{emval_handles.push(0,1,undefined,1,null,1,true,1,false,1);Module["count_emval_handles"]=count_emval_handles};var Emval={toValue:handle=>{if(!handle){throwBindingError("Cannot use deleted val. handle = "+handle)}return emval_handles[handle]},toHandle:value=>{switch(value){case undefined:return 2;case null:return 4;case true:return 6;case false:return 8;default:{const handle=emval_freelist.pop()||emval_handles.length;emval_handles[handle]=value;emval_handles[handle+1]=1;return handle}}}};var EmValType={name:"emscripten::val",fromWireType:handle=>{var rv=Emval.toValue(handle);__emval_decref(handle);return rv},toWireType:(destructors,value)=>Emval.toHandle(value),argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,destructorFunction:null};var __embind_register_emval=rawType=>registerType(rawType,EmValType);var embindRepr=v=>{if(v===null){return"null"}var t=typeof v;if(t==="object"||t==="array"||t==="function"){return v.toString()}else{return""+v}};var floatReadValueFromPointer=(name,width)=>{switch(width){case 4:return function(pointer){return this["fromWireType"](HEAPF32[pointer>>2])};case 8:return function(pointer){return this["fromWireType"](HEAPF64[pointer>>3])};default:throw new TypeError(`invalid float width (${width}): ${name}`)}};var __embind_register_float=(rawType,name,size)=>{name=readLatin1String(name);registerType(rawType,{name,fromWireType:value=>value,toWireType:(destructors,value)=>value,argPackAdvance:GenericWireTypeSize,readValueFromPointer:floatReadValueFromPointer(name,size),destructorFunction:null})};var integerReadValueFromPointer=(name,width,signed)=>{switch(width){case 1:return signed?pointer=>HEAP8[pointer]:pointer=>HEAPU8[pointer];case 2:return signed?pointer=>HEAP16[pointer>>1]:pointer=>HEAPU16[pointer>>1];case 4:return signed?pointer=>HEAP32[pointer>>2]:pointer=>HEAPU32[pointer>>2];default:throw new TypeError(`invalid integer width (${width}): ${name}`)}};var __embind_register_integer=(primitiveType,name,size,minRange,maxRange)=>{name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var fromWireType=value=>value;if(minRange===0){var bitshift=32-8*size;fromWireType=value=>value<<bitshift>>>bitshift}var isUnsignedType=name.includes("unsigned");var checkAssertions=(value,toTypeName)=>{};var toWireType;if(isUnsignedType){toWireType=function(destructors,value){checkAssertions(value,this.name);return value>>>0}}else{toWireType=function(destructors,value){checkAssertions(value,this.name);return value}}registerType(primitiveType,{name,fromWireType,toWireType,argPackAdvance:GenericWireTypeSize,readValueFromPointer:integerReadValueFromPointer(name,size,minRange!==0),destructorFunction:null})};var __embind_register_memory_view=(rawType,dataTypeIndex,name)=>{var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){var size=HEAPU32[handle>>2];var data=HEAPU32[handle+4>>2];return new TA(HEAP8.buffer,data,size)}name=readLatin1String(name);registerType(rawType,{name,fromWireType:decodeMemoryView,argPackAdvance:GenericWireTypeSize,readValueFromPointer:decodeMemoryView},{ignoreDuplicateRegistrations:true})};var stringToUTF8Array=(str,heap,outIdx,maxBytesToWrite)=>{if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx};var stringToUTF8=(str,outPtr,maxBytesToWrite)=>stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite);var lengthBytesUTF8=str=>{var len=0;for(var i=0;i<str.length;++i){var c=str.charCodeAt(i);if(c<=127){len++}else if(c<=2047){len+=2}else if(c>=55296&&c<=57343){len+=4;++i}else{len+=3}}return len};var UTF8Decoder=typeof TextDecoder!="undefined"?new TextDecoder:undefined;var UTF8ArrayToString=(heapOrArray,idx=0,maxBytesToRead=NaN)=>{var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str="";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str};var UTF8ToString=(ptr,maxBytesToRead)=>ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):"";var __embind_register_std_string=(rawType,name)=>{name=readLatin1String(name);var stdStringIsUTF8=name==="std::string";registerType(rawType,{name,fromWireType(value){var length=HEAPU32[value>>2];var payload=value+4;var str;if(stdStringIsUTF8){var decodeStartPtr=payload;for(var i=0;i<=length;++i){var currentBytePtr=payload+i;if(i==length||HEAPU8[currentBytePtr]==0){var maxRead=currentBytePtr-decodeStartPtr;var stringSegment=UTF8ToString(decodeStartPtr,maxRead);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[payload+i])}str=a.join("")}_free(value);return str},toWireType(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var length;var valueIsOfTypeString=typeof value=="string";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError("Cannot pass non-string to std::string")}if(stdStringIsUTF8&&valueIsOfTypeString){length=lengthBytesUTF8(value)}else{length=value.length}var base=_malloc(4+length+1);var ptr=base+4;HEAPU32[base>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError("String has UTF-16 code units that do not fit in 8 bits")}HEAPU8[ptr+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+i]=value[i]}}}if(destructors!==null){destructors.push(_free,base)}return base},argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,destructorFunction(ptr){_free(ptr)}})};var UTF16Decoder=typeof TextDecoder!="undefined"?new TextDecoder("utf-16le"):undefined;var UTF16ToString=(ptr,maxBytesToRead)=>{var endPtr=ptr;var idx=endPtr>>1;var maxIdx=idx+maxBytesToRead/2;while(!(idx>=maxIdx)&&HEAPU16[idx])++idx;endPtr=idx<<1;if(endPtr-ptr>32&&UTF16Decoder)return UTF16Decoder.decode(HEAPU8.subarray(ptr,endPtr));var str="";for(var i=0;!(i>=maxBytesToRead/2);++i){var codeUnit=HEAP16[ptr+i*2>>1];if(codeUnit==0)break;str+=String.fromCharCode(codeUnit)}return str};var stringToUTF16=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<2)return 0;maxBytesToWrite-=2;var startPtr=outPtr;var numCharsToWrite=maxBytesToWrite<str.length*2?maxBytesToWrite/2:str.length;for(var i=0;i<numCharsToWrite;++i){var codeUnit=str.charCodeAt(i);HEAP16[outPtr>>1]=codeUnit;outPtr+=2}HEAP16[outPtr>>1]=0;return outPtr-startPtr};var lengthBytesUTF16=str=>str.length*2;var UTF32ToString=(ptr,maxBytesToRead)=>{var i=0;var str="";while(!(i>=maxBytesToRead/4)){var utf32=HEAP32[ptr+i*4>>2];if(utf32==0)break;++i;if(utf32>=65536){var ch=utf32-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}else{str+=String.fromCharCode(utf32)}}return str};var stringToUTF32=(str,outPtr,maxBytesToWrite)=>{maxBytesToWrite??=2147483647;if(maxBytesToWrite<4)return 0;var startPtr=outPtr;var endPtr=startPtr+maxBytesToWrite-4;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343){var trailSurrogate=str.charCodeAt(++i);codeUnit=65536+((codeUnit&1023)<<10)|trailSurrogate&1023}HEAP32[outPtr>>2]=codeUnit;outPtr+=4;if(outPtr+4>endPtr)break}HEAP32[outPtr>>2]=0;return outPtr-startPtr};var lengthBytesUTF32=str=>{var len=0;for(var i=0;i<str.length;++i){var codeUnit=str.charCodeAt(i);if(codeUnit>=55296&&codeUnit<=57343)++i;len+=4}return len};var __embind_register_std_wstring=(rawType,charSize,name)=>{name=readLatin1String(name);var decodeString,encodeString,readCharAt,lengthBytesUTF;if(charSize===2){decodeString=UTF16ToString;encodeString=stringToUTF16;lengthBytesUTF=lengthBytesUTF16;readCharAt=pointer=>HEAPU16[pointer>>1]}else if(charSize===4){decodeString=UTF32ToString;encodeString=stringToUTF32;lengthBytesUTF=lengthBytesUTF32;readCharAt=pointer=>HEAPU32[pointer>>2]}registerType(rawType,{name,fromWireType:value=>{var length=HEAPU32[value>>2];var str;var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i*charSize;if(i==length||readCharAt(currentBytePtr)==0){var maxReadBytes=currentBytePtr-decodeStartPtr;var stringSegment=decodeString(decodeStartPtr,maxReadBytes);if(str===undefined){str=stringSegment}else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+charSize}}_free(value);return str},toWireType:(destructors,value)=>{if(!(typeof value=="string")){throwBindingError(`Cannot pass non-string to C++ string type ${name}`)}var length=lengthBytesUTF(value);var ptr=_malloc(4+length+charSize);HEAPU32[ptr>>2]=length/charSize;encodeString(value,ptr+4,length+charSize);if(destructors!==null){destructors.push(_free,ptr)}return ptr},argPackAdvance:GenericWireTypeSize,readValueFromPointer:readPointer,destructorFunction(ptr){_free(ptr)}})};var __embind_register_void=(rawType,name)=>{name=readLatin1String(name);registerType(rawType,{isVoid:true,name,argPackAdvance:0,fromWireType:()=>undefined,toWireType:(destructors,o)=>undefined})};var __emscripten_memcpy_js=(dest,src,num)=>HEAPU8.copyWithin(dest,src,src+num);var requireRegisteredType=(rawType,humanName)=>{var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(`${humanName} has unknown type ${getTypeName(rawType)}`)}return impl};var __emval_take_value=(type,arg)=>{type=requireRegisteredType(type,"_emval_take_value");var v=type["readValueFromPointer"](arg);return Emval.toHandle(v)};var readEmAsmArgsArray=[];var readEmAsmArgs=(sigPtr,buf)=>{readEmAsmArgsArray.length=0;var ch;while(ch=HEAPU8[sigPtr++]){var wide=ch!=105;wide&=ch!=112;buf+=wide&&buf%8?4:0;readEmAsmArgsArray.push(ch==112?HEAPU32[buf>>2]:ch==105?HEAP32[buf>>2]:HEAPF64[buf>>3]);buf+=wide?8:4}return readEmAsmArgsArray};var runEmAsmFunction=(code,sigPtr,argbuf)=>{var args=readEmAsmArgs(sigPtr,argbuf);return ASM_CONSTS[code](...args)};var _emscripten_asm_const_int=(code,sigPtr,argbuf)=>runEmAsmFunction(code,sigPtr,argbuf);var abortOnCannotGrowMemory=requestedSize=>{abort("OOM")};var _emscripten_resize_heap=requestedSize=>{var oldSize=HEAPU8.length;requestedSize>>>=0;abortOnCannotGrowMemory(requestedSize)};embind_init_charCodes();BindingError=Module["BindingError"]=class BindingError extends Error{constructor(message){super(message);this.name="BindingError"}};InternalError=Module["InternalError"]=class InternalError extends Error{constructor(message){super(message);this.name="InternalError"}};init_ClassHandle();init_RegisteredPointer();UnboundTypeError=Module["UnboundTypeError"]=extendError(Error,"UnboundTypeError");init_emval();var wasmImports={l:__abort_js,k:__embind_register_bigint,h:__embind_register_bool,q:__embind_register_class,p:__embind_register_class_constructor,c:__embind_register_class_function,o:__embind_register_emval,f:__embind_register_float,b:__embind_register_integer,a:__embind_register_memory_view,e:__embind_register_std_string,d:__embind_register_std_wstring,i:__embind_register_void,n:__emscripten_memcpy_js,j:__emval_take_value,g:_emscripten_asm_const_int,m:_emscripten_resize_heap};var wasmExports=createWasm();var ___wasm_call_ctors=()=>(___wasm_call_ctors=wasmExports["s"])();var ___getTypeName=a0=>(___getTypeName=wasmExports["t"])(a0);var _malloc=a0=>(_malloc=wasmExports["v"])(a0);var _free=a0=>(_free=wasmExports["w"])(a0);var calledRun;var calledPrerun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}if(!calledPrerun){calledPrerun=1;preRun();if(runDependencies>0){return}}function doRun(){if(calledRun)return;calledRun=1;Module["calledRun"]=1;if(ABORT)return;initRuntime();readyPromiseResolve(Module);Module["onRuntimeInitialized"]?.();postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(()=>{setTimeout(()=>Module["setStatus"](""),1);doRun()},1)}else{doRun()}}if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}run();moduleRtn=readyPromise;


  return moduleRtn;
}
);
})();
export default opl;
